interface IconButton {
    width?: string,
    height?: string,
    fill?: string,
    type?: 'copy' | 'bookMark',
    onClick?: () => void,
}

export const IconButton = ({ width='2rem', height='2rem', fill='#84848F', type='copy', onClick }: IconButton) => {
    const types = {
        copy: <g mask="url(#mask0_174_557)"><path d="M15.3333 29.1795C13.3829 29.1795 11.7244 28.4962 10.3577 27.1295C8.99103 25.7629 8.30769 24.1044 8.30769 22.1539V7.74365C8.30769 6.34045 8.80733 5.13922 9.80659 4.13998C10.8058 3.14074 12.0071 2.64111 13.4103 2.64111C14.8135 2.64111 16.0147 3.14074 17.0139 4.13998C18.0132 5.13922 18.5128 6.34045 18.5128 7.74365V20.7437C18.5128 21.6339 18.2054 22.3864 17.5907 23.0011C16.9759 23.6158 16.2233 23.9231 15.333 23.9231C14.4426 23.9231 13.6902 23.6158 13.0756 23.0011C12.4611 22.3864 12.1539 21.6339 12.1539 20.7437V8.53851C12.1539 8.30889 12.2289 8.119 12.3789 7.96885C12.5289 7.81871 12.7187 7.74365 12.9481 7.74365C13.1776 7.74365 13.3675 7.81871 13.5179 7.96885C13.6683 8.119 13.7436 8.30889 13.7436 8.53851V20.7437C13.7436 21.1941 13.8959 21.5717 14.2006 21.8764C14.5053 22.1811 14.8829 22.3334 15.3333 22.3334C15.7837 22.3334 16.1613 22.1811 16.466 21.8764C16.7707 21.5717 16.9231 21.1941 16.9231 20.7437V7.74365C16.9231 6.76005 16.5834 5.92868 15.9041 5.24955C15.2247 4.57039 14.3931 4.23081 13.4092 4.23081C12.4253 4.23081 11.594 4.57039 10.9154 5.24955C10.2367 5.92868 9.89743 6.76005 9.89743 7.74365V22.1539C9.89743 23.6548 10.4282 24.936 11.4897 25.9975C12.5513 27.0591 13.8325 27.5898 15.3333 27.5898C16.8342 27.5898 18.1154 27.0591 19.1769 25.9975C20.2385 24.936 20.7692 23.6548 20.7692 22.1539V8.53851C20.7692 8.30889 20.8442 8.119 20.9943 7.96885C21.1443 7.81871 21.334 7.74365 21.5635 7.74365C21.7929 7.74365 21.9829 7.81871 22.1333 7.96885C22.2837 8.119 22.359 8.30889 22.359 8.53851V22.1539C22.359 24.1044 21.6756 25.7629 20.309 27.1295C18.9423 28.4962 17.2837 29.1795 15.3333 29.1795Z" fill={fill}/></g>,
        bookMark: <g mask="url(#mask0_174_561)"><path d="M16 24.0633L10.7077 26.3351C9.90431 26.6787 9.14107 26.6139 8.41801 26.1408C7.69492 25.6677 7.33337 24.9983 7.33337 24.1326V7.8583C7.33337 7.18479 7.56671 6.6147 8.03337 6.14803C8.50004 5.68136 9.07013 5.44803 9.74364 5.44803H17.3333V7.448H9.74364C9.64106 7.448 9.54703 7.49073 9.46154 7.5762C9.37607 7.66169 9.33334 7.75572 9.33334 7.8583V24.0864C9.33334 24.2317 9.39531 24.3471 9.51924 24.4326C9.6432 24.5181 9.77355 24.5309 9.91031 24.4711L16 21.848L22.0897 24.4711C22.2265 24.5309 22.3568 24.5181 22.4808 24.4326C22.6047 24.3471 22.6667 24.2317 22.6667 24.0864V15.448H24.6666V24.1326C24.6666 24.9983 24.3051 25.6677 23.582 26.1408C22.8589 26.6139 22.0957 26.6787 21.2923 26.3351L16 24.0633ZM22.6667 10.1147H21C20.7167 10.1147 20.4792 10.0188 20.2875 9.82703C20.0958 9.63529 20 9.3977 20 9.11423C20 8.83078 20.0958 8.59334 20.2875 8.4019C20.4792 8.21043 20.7167 8.1147 21 8.1147H22.6667V6.44803C22.6667 6.1647 22.7626 5.9272 22.9543 5.73553C23.146 5.54386 23.3836 5.44803 23.6671 5.44803C23.9506 5.44803 24.188 5.54386 24.3794 5.73553C24.5709 5.9272 24.6666 6.1647 24.6666 6.44803V8.1147H26.3333C26.6166 8.1147 26.8541 8.21057 27.0458 8.40233C27.2375 8.59408 27.3333 8.83168 27.3333 9.11513C27.3333 9.39859 27.2375 9.63605 27.0458 9.8275C26.8541 10.0189 26.6166 10.1147 26.3333 10.1147H24.6666V11.7814C24.6666 12.0647 24.5708 12.3022 24.379 12.4938C24.1873 12.6855 23.9497 12.7813 23.6662 12.7813C23.3827 12.7813 23.1453 12.6855 22.9538 12.4938C22.7624 12.3022 22.6667 12.0647 22.6667 11.7814V10.1147Z" fill={fill}/></g>,
        bookMarked: <g mask="url(#mask0_365_841)"><path d="M16.1062 24.0635L10.8139 26.3353C10.0105 26.6789 9.24731 26.6131 8.52424 26.1379C7.80115 25.6627 7.43961 24.9943 7.43961 24.1328V7.85851C7.43961 7.185 7.67294 6.61491 8.13961 6.14824C8.60627 5.68158 9.17636 5.44824 9.84987 5.44824H17.4396V7.44821H9.84987C9.74729 7.44821 9.65326 7.49094 9.56777 7.57641C9.48231 7.6619 9.43957 7.75593 9.43957 7.85851V24.0866C9.43957 24.2319 9.50154 24.3473 9.62547 24.4328C9.74943 24.5183 9.87978 24.5311 10.0165 24.4713L16.1062 21.8482L22.1959 24.4713C22.3327 24.5311 22.463 24.5183 22.587 24.4328C22.7109 24.3473 22.7729 24.2319 22.7729 24.0866V15.4482H24.7729V24.1328C24.7729 24.9943 24.4113 25.6627 23.6882 26.1379C22.9652 26.6131 22.2019 26.6789 21.3985 26.3353L16.1062 24.0635ZM23.3985 9.96368L27.396 5.95338C27.5943 5.74656 27.8297 5.64314 28.1024 5.64314C28.375 5.64314 28.6147 5.74656 28.8216 5.95338C29.0284 6.16022 29.1318 6.39782 29.1318 6.66618C29.1318 6.93455 29.0284 7.17217 28.8216 7.37901L24.2421 11.938C24.0011 12.179 23.7199 12.2995 23.3985 12.2995C23.0772 12.2995 22.796 12.179 22.5549 11.938L20.796 10.179C20.6114 9.99439 20.519 9.76575 20.519 9.49311C20.519 9.22046 20.6114 8.985 20.796 8.78671C20.9943 8.57989 21.2319 8.47861 21.5088 8.48288C21.7857 8.48716 22.0233 8.58844 22.2216 8.78671L23.3985 9.96368Z" fill="#18171D"/></g>
    }

    const svgContent = types[type];
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width={width} height={height} viewBox="0 0 32 32" fill="none" style={{ zIndex: '5' }} onClick={onClick}>
            <mask id="mask0_174_557" maskUnits="userSpaceOnUse" x="0" y="0" width={width} height={height}>
                <rect width={width} height={height} fill="#D9D9D9"/>
            </mask>
            {svgContent}
        </svg>
    )
}